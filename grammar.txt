S -> ENTER S
S -> S ENTER
S -> ENTER
S -> IMPORT_STMT
S -> IMPORT_STMT ENTER S
S -> IMPORT_STMT ENTER SS
S -> SS
SS -> PART SS
PART -> CLASS_STMT
PART -> FUNC_STMT
PART -> FOR_STMT
PART -> IF_STMT
PART -> WHILE_STMT
PART -> SENTENCE
SS -> CLASS_STMT
SS -> FUNC_STMT
SS -> FOR_STMT
SS -> IF_STMT
SS -> WHILE_STMT
SS -> SENTENCE
SENTENCE -> FUNC_STMT
SENTENCE -> ASSIGN
SENTENCE -> IF_BLOCK
SENTENCE -> FOR_STMT
SENTENCE -> STATIC
SENTENCE -> CONTINUE
SENTENCE -> BREAK
SENTENCE -> NULL
SENTENCE -> DELETE_STMT
SENTENCE -> ENTER SENTENCE
SENTENCE -> RETURN SENTENCE
SENTENCE -> SENTENCE ENTER SENTENCE
SENTENCE -> SENTENCE SEMICOLON ENTER
SENTENCE -> SENTENCE SEMICOLON
SENTENCE -> SENTENCE ENTER
SENTENCE -> COMMENT_STMT
SENTENCE -> THROW_STMT
SENTENCE -> SWITCH_STMT
SENTENCE -> TRY_BLOCK
LOGI_OPERATOR -> ISEQ
LOGI_OPERATOR -> NEQ
LOGI_OPERATOR -> LE
LOGI_OPERATOR -> AND
LOGI_OPERATOR -> OR
LOGI_OPERATOR -> L
LOGI_OPERATOR -> G
LOGI_OPERATOR -> GE
LOGI_VAR -> VARNUM
LOGI_VAR -> NOT LOGI_VAR
LOGI_VAR -> KBKI LOGI_VAR KBKA
LOGI_VAR -> ARIT_OP
LOGI_OP -> LOGI_VAR LOGI_OPERATOR LOGI_OP
LOGI_OP -> LOGI_VAR LOGI_OPERATOR LOGI_VAR
IF_BLOCK -> IF_STMT
IF_BLOCK -> IF_STMT ELIF_BLOCK
IF_BLOCK -> IF_STMT ENTER ELIF_BLOCK
IF_BLOCK -> IF_STMT ELIF_BLOCK ELSE_STMT
IF_BLOCK -> IF_STMT ENTER ELIF_BLOCK ENTER ELSE_STMT
IF_BLOCK -> IF_STMT ELIF_BLOCK ENTER ELSE_STMT
IF_BLOCK -> IF_STMT ENTER ELIF_BLOCK ELSE_STMT
IF_BLOCK -> IF_STMT ELSE_STMT
IF_BLOCK -> IF_STMT ENTER ELSE_STMT
IF_BLOCK -> IF_STMT ENTER IF_BLOCK
IF_STMT -> IF KBKI ALL KBKA KKKI ENTER SENTENCE KKKA
IF_STMT -> IF KBKI ALL KBKA KKKI ENTER IF_BLOCK ENTER KKKA
IF_STMT -> IF KBKI LOGI_OP KBKA KKKI SENTENCE KKKA
IF_STMT -> IF KBKI LOGI_OP KBKA KKKI ENTER IF_BLOCK ENTER KKKA
ELIF_BLOCK -> ELIF_STMT
ELIF_BLOCK -> ELIF_STMT ELIF_BLOCK
ELIF_BLOCK -> ELIF_STMT ENTER ELIF_BLOCK
ELIF_STMT -> ELIF KBKI LOGI_OP KBKA KKKI ENTER SENTENCE KKKA
ELIF_STMT -> ELIF KBKI LOGI_OP KBKA KKKI ENTER IF_BLOCK ENTER KKKA
ELIF_STMT -> ELIF KBKI ALL KBKA KKKI ENTER SENTENCE KKKA
ELIF_STMT -> ELIF KBKI ALL KBKA KKKI ENTER IF_BLOCK ENTER KKKA
ELSE_STMT -> ELSE KKKI ENTER FUNC_SENTENCE KKKA
ELSE_STMT -> ELSE KKKI ENTER IF_BLOCK ENTER KKKA
ENTER -> NEWLINE ENTER
ENTER -> NEWLINE
WHILE_STMT -> WHILE KBKI LOGI_OP KBKA KKKI ENTER LOOP_SENTENCE KKKA
WHILE_STMT -> WHILE KBKI BOOL KBKA KKKI ENTER LOOP_SENTENCE KKKA
ASSIGN -> TYPE ASSIGN
ASSIGN -> VAR ASSIGN_OP ASSIGNMENT
ASSIGN -> VAR INCR
ASSIGN -> VAR DECR
ASSIGN_OP -> EQUAL
ASSIGN_OP -> SUBTREQ
ASSIGN_OP -> MULEQ
ASSIGN_OP -> SUMEQ
ASSIGN_OP -> DIVEQ
ASSIGN_OP -> POWEQ
ASSIGN_OP -> MODEQ
ASSIGNMENT -> NUM
ASSIGNMENT -> VAR
ASSIGNMENT -> STRING
ASSIGNMENT -> OPERATION
ASSIGNMENT -> NULL
ASSIGNMENT -> ARRAY_STMT
ARRAY_STMT -> KSKI ARRAY_COMP KSKA
ARRAY_COMP -> ALL
ARRAY_COMP -> ALL COMMA ARRAY_COMP COMMA ALL
IDX -> KSKI VARNUM KSKA
IDX -> IDX IDX
ARRAY -> VAR IDX
OPERATION -> ARIT_OP
OPERATION -> LOGI_OP
ARIT_OP -> VARNUM ARIT_OPERATOR VARNUM
ARIT_OPERATOR -> ADD
ARIT_OPERATOR -> SUBTR
ARIT_OPERATOR -> MUL
ARIT_OPERATOR -> DIV
ARIT_OPERATOR -> MOD
ARIT_OPERATOR -> POW
VAR -> KBKI VAR KBKA
VAR -> VAR COMMA VAR
VAR -> VARIABLE
ALL -> VARNUM
ALL -> STRING
ALL -> BOOL
ALL -> NULL
ALL -> DOTBETWEEN
ALL -> ARRAY
BOOL -> TRUE
BOOL -> IS
BOOL -> FALSE
BOOL -> NONE
VARNUM -> NUM
VARNUM -> VAR
VARNUM -> BOOL
VARNUM -> NONE
STATIC -> NUM
STATIC -> STRING
STATIC -> BOOL
EXP -> BOOL
EXP -> VARNUM
EXP -> EXP ARIT_OPERATOR EXP
EXP -> VAR KBKI KBKA
EXP -> VAR KBKI PARAM KBKA
EXP -> KBKI EXP KBKA
PARAM -> ALL
PARAM -> STATIC
PARAM -> PARAM COMMA PARAM
PARAM -> ARIT_OP
PARAM -> LOGI_OP
VAR_FUNC -> VAR
VAR_BANYAK -> ALL VAR_BANYAK
VAR_BANYAK -> ALL
FUNC_SENTENCE -> SENTENCE
FUNC_SENTENCE -> IF_STMT
FUNC_SENTENCE -> IF_BLOCK
FUNC_SENTENCE -> RETURN SENTENCE
FUNC_STMT -> FUNCTION VAR KBKI KBKA KKKI ENTER FUNC_SENTENCE KKKA
FUNC_STMT -> FUNCTION VAR KBKI PARAM KBKA KKKI ENTER FUNC_SENTENCE KKKA
FUNC_STMT -> FUNC_STMT ENTER
FUNC_STMT -> VAR EXP
COMMENT_STMT -> COMMENT VAR_BANYAK
LOOP_SENTENCE -> SENTENCE
LOOP_SENTENCE -> BREAK
LOOP_SENTENCE -> CONTINUE
LOOP_SENTENCE -> LOOP_SENTENCE ENTER LOOP_SENTENCE
LOOP_SENTENCE -> IF_BLOCK LOOP_SENTENCE
LOOP_SENTENCE -> IF_BLOCK LOOP_SENTENCE
FOR_STMT -> FOR KBKI ASSIGN SEMICOLON LOGI_OP SEMICOLON ASSIGN KBKA KKKI ENTER LOOP_SENTENCE KKKA
CASE_STMT -> CASE ALL COLON SENTENCE BREAK SEMICOLON ENTER
CASE_BYK -> CASE_STMT CASE_BYK
CASE_BYK -> CASE_STMT
SWITCH_STMT -> SWITCH EXP KKKI ENTER CASE_BYK DEFAULT_STMT KKKA
DEFAULT_STMT -> DEFAULT COLON SENTENCE
TRY_BLOCK -> TRY_STMT CATCH_STMT
TRY_BLOCK -> TRY_STMT FINALLY_STMT
TRY_BLOCK -> TRY_STMT CATCH_STMT FINALLY_STMT
TRY_BLOCK -> TRY_STMT ENTER CATCH_STMT
TRY_BLOCK -> TRY_STMT ENTER FINALLY_STMT
TRY_BLOCK -> TRY_STMT ENTER CATCH_STMT FINALLY_STMT
TRY_BLOCK -> TRY_STMT CATCH_STMT ENTER FINALLY_STMT
TRY_BLOCK -> TRY_STMT ENTER CATCH_STMT ENTER FINALLY_STMT
TRY_STMT -> TRY KKKI SENTENCE KKKA
CATCH_STMT -> CATCH EXP KKKI SENTENCE KKKA
FINALLY_STMT -> FINALLY KKKI SENTENCE KKKA
THROW_STMT -> THROW ALL
DELETE_STMT -> DELETE ALL